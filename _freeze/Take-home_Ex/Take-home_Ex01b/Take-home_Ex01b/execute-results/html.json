{
  "hash": "b10016f54afa72aaae69ea4089f3f9b4",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take-home Exercise 1b: Data Visualisation Makeover\"\nformat: html\nauthor: \"Belinda Lim\"\ndate: May 6, 2025\ndate-modified: \"last-modified\"\neditor: source\nexecute:\n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n---\n\n\n\n# **1 Introduction**\n\n## **1.1 Overview**\n\nUnder Take-home Exercise 1b, we are required to select one submission from our classmate for Take-home Exercise 1 to critic 3 good design principles and 3 areas for further improvements. With reference to the comments, we will provide a makeover of the data visualisation.\n\n## **1.2 Framework for Gauging Data Visualisation**\n\nUnder the article published by [Ben Jones](https://dataremixed.com/2012/05/data-visualization-clarity-or-aesthetics/), he shared the following framework to gauge the objective and subjective merits of a data visualisation. It will be used to review my classmate's submission (see link to [original page](https://iss608-vaa.netlify.app/take-home_ex/take-home_ex01/take%20home%20exercise%201)).The submission was selected as the charts can be classified into the Quadrant II, III and IV:\n\n-   Quadrant I = \\[clear, beautiful\\]\n\n-   Quadrant II = \\[clear, ugly\\]\n\n-   Quadrant III = \\[confusing, ugly\\]\n\n-   Quadrant IV = \\[confusing, beautiful\\]\n\n![](images/clipboard-891094182.png)\n\n# **2 Critique**\n\n## **2.1 Loading of libraries and data pre-processing based on classmate's codes**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(\"pacman\")\nsuppressWarnings(library(\"lubridate\"))\nlibrary(readr)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse, readxl, \n               janitor, lubridate, \n               ggplot2, ggthemes, \n               scales, ggridges, \n               ggdist, patchwork)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nResident_Data <- read.csv(\"data/Resident_Data.csv\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(Resident_Data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 60,424\nColumns: 6\n$ PA   <chr> \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo K…\n$ SZ   <chr> \"Ang Mo Kio Town Centre\", \"Ang Mo Kio Town Centre\", \"Ang Mo Kio T…\n$ Age  <chr> \"0\", \"0\", \"1\", \"1\", \"2\", \"2\", \"3\", \"3\", \"4\", \"4\", \"5\", \"5\", \"6\", …\n$ Sex  <chr> \"Males\", \"Females\", \"Males\", \"Females\", \"Males\", \"Females\", \"Male…\n$ Pop  <int> 10, 10, 10, 10, 10, 10, 10, 10, 30, 10, 20, 10, 20, 30, 30, 10, 3…\n$ Time <int> 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024,…\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nResident_Data[duplicated(Resident_Data),]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] PA   SZ   Age  Sex  Pop  Time\n<0 rows> (or 0-length row.names)\n```\n\n\n:::\n:::\n\n\n\nNote that my classmate has renamed SZ to Subzone and created two additional columns AG (Age Group) and FA (Functional Age) as shown in my classmate's website (see extract in the Figure below). To ensure that the charts are reproducible, the data pre-processing steps and codes should be spelt out.\n\n[Figure 1: Extracts from classmate's website]{.underline} <img src=\"images/clipboard-185020519.png\" style=\"border: 2px solid #ccc; border-radius: 8px; width: 80%;\">\n\n## **2.2 Bar chart based on Population Area**\n\n### **2.2.1 Original Chart**\n\nThe original chart is reproduced below using the codes provided by my classmate.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfiltered_data <- Resident_Data[!is.na(Resident_Data$Pop) & Resident_Data$Pop > 0, ]\n\nggplot(data = filtered_data, aes(x = reorder(`PA`, Pop), y = Pop)) +\n  geom_bar(stat = \"identity\", fill = \"steelblue\") +\n  coord_flip() +\n  labs(\n    title = \"Population by Planning Area (Singapore, 2024)\",\n    x = \"Planning Area\",\n    y = \"Population\"\n  ) +\n  scale_y_continuous(labels = comma) +\n  theme_minimal(base_size = 20) +  # Increase base font size\n  \n  theme(\n    plot.title = element_text(size = 18, face = \"bold\"),\n    axis.text.y = element_text(size = 15),\n    axis.text.x = element_text(size = 10),\n    plot.margin = margin(1, 1, 1, 1, \"cm\")  # Add breathing space\n  )\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01b_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\nHowever, the chart produced did not look like the one published on my classmate's website:\n\n[Figure 2: Extracts from classmate's website]{.underline} <img src=\"images/clipboard-320653457.png\" style=\"border: 2px solid #ccc; border-radius: 8px; width: 80%;\">\n\nThe chart can be classified under Quadrant II = \\[clear, ugly\\]. The bar chart summarised the population numbers for all PA in Singapore clearly with a well-labelled x-axis scale.\n\nTo improve the chart, it is recommended to:\n\n-   Sort bar chart by population numbers\n\n-   Remove x-axis and y-axis label since the information is found in the chart title.\n\n-   Adjust size of the x-axis numbers and add more intervals for the ticks\n\n-   Adjust size of the title\n\n-   Remove plot margins to allow chart to be bigger\n\n### **2.2.2 Makeover of Original Chart**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nknitr::opts_chunk$set(fig.width = 12, fig.height = 15)\n\nfiltered_data <- Resident_Data %>%\n  filter(!is.na(Pop) & Pop > 0) %>%\n  group_by(PA) %>%\n  summarise(Pop = sum(Pop), .groups = \"drop\")\n\nggplot(data = filtered_data, aes(x = reorder(PA, Pop), y = Pop)) +\n  geom_bar(stat = \"identity\", fill = \"steelblue\") +\n  coord_flip() +\n  labs(\n    title = \"Population Numbers by Planning Areas (Singapore, 2024)\",\n    x = NULL,  \n    y = NULL   \n  ) +\n  scale_y_continuous(breaks = c(0, 50000, 100000, 150000, 200000, 250000, 300000), labels = comma) +\n  theme_minimal(base_size = 16) +\n  theme(\n    plot.title = element_text(size = 12, face = \"bold\"),\n    axis.text.y = element_text(size = 8),   \n    axis.text.x = element_text(size = 8)\n  )\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01b_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n## **2.3 Pyramid Bar chart based on Population Area**\n\n### **2.3.1 Original Chart**\n\nThe attempt to reproduce the original chart using the code below has failed:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npyramid_data \\<- aggregate(Pop \\~ `AG` + Sex, data = Resident_Data, sum)\n\nage_order \\<- c(\"0_to_4\", \"5_to_9\", \"10_to_14\", \"15_to_19\", \"20_to_24\", \"25_to_29\", \"30_to_34\", \"35_to_39\", \"40_to_44\", \"45_to_49\", \"50_to_54\", \"55_to_59\", \"60_to_64\", \"65_to_69\", \"70_to_74\", \"75_to_79\", \"80_to_84\", \"85_to_89\", \"90_and_over\")\n\npyramid_data$AG <- factor(pyramid_data$AG, levels = age_order)\n\npyramid_data$Pop[pyramid_data$Sex == \"Males\"\\] \\<- -pyramid_data$Pop[pyramid_data$Sex == \"Males\"\\]\n\nggplot(data = pyramid_data, aes(x = AG, y = Pop, fill = Sex)) + geom_bar(stat = \"identity\") + coord_flip() + labs(title = \"Population Pyramid (2024)\", x = \"Age Group\", y = \"Population\") + scale_y_continuous(labels = comma) + scale_fill_manual(values = c(\"skyblue\", \"salmon\")) + theme_minimal() + theme(axis.text.y = element_text(size = 10))\n```\n:::\n\n\n\nA check was done on the column names.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(Resident_Data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"PA\"   \"SZ\"   \"Age\"  \"Sex\"  \"Pop\"  \"Time\"\n```\n\n\n:::\n:::\n\n\n\nThere was an error as the original data does not have AG (or Age Group) but AG was cited in the codes above.\n\nTo rectify, the following codes for AG column were inserted\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nResident_Data <- Resident_Data %>%\n  mutate(\n    Age = recode(Age, \"90_and_Over\" = \"90\"),  \n    Age = as.numeric(Age),                    \n    Pop = as.numeric(Pop)                     \n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n  Resident_Data <- Resident_Data %>%\n  mutate(\n    AG = case_when(\n      Age >= 0 & Age <= 4 ~ \"0_to_4\",\n      Age >= 5 & Age <= 9 ~ \"5_to_9\",\n      Age >= 10 & Age <= 14 ~ \"10_to_14\",\n      Age >= 15 & Age <= 19 ~ \"15_to_19\",\n      Age >= 20 & Age <= 24 ~ \"20_to_24\",\n      Age >= 25 & Age <= 29 ~ \"25_to_29\",\n      Age >= 30 & Age <= 34 ~ \"30_to_34\",\n      Age >= 35 & Age <= 39 ~ \"35_to_39\",\n      Age >= 40 & Age <= 44 ~ \"40_to_44\",\n      Age >= 45 & Age <= 49 ~ \"45_to_49\",\n      Age >= 50 & Age <= 54 ~ \"50_to_54\",\n      Age >= 55 & Age <= 59 ~ \"55_to_59\",\n      Age >= 60 & Age <= 64 ~ \"60_to_64\",\n      Age >= 65 & Age <= 69 ~ \"65_to_69\",\n      Age >= 70 & Age <= 74 ~ \"70_to_74\",\n      Age >= 75 & Age <= 79 ~ \"75_to_79\",\n      Age >= 80 & Age <= 84 ~ \"80_to_84\",\n      Age >= 85 & Age <= 89 ~ \"85_to_89\",\n      Age >= 90 ~ \"90_and_over\",\n      TRUE ~ NA_character_\n    )\n  )\n```\n:::\n\n\n\nThe orignal code can now be reproduced:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npyramid_data <- aggregate(Pop ~ `AG` + Sex, data = Resident_Data, sum)\n\nage_order <- c(\"0_to_4\", \"5_to_9\", \"10_to_14\", \"15_to_19\", \"20_to_24\", \"25_to_29\", \n               \"30_to_34\", \"35_to_39\", \"40_to_44\", \"45_to_49\", \"50_to_54\", \"55_to_59\", \n               \"60_to_64\", \"65_to_69\", \"70_to_74\", \"75_to_79\", \"80_to_84\", \"85_to_89\", \n               \"90_and_over\")\n\npyramid_data$AG <- factor(pyramid_data$AG, levels = age_order)\n\npyramid_data$Pop[pyramid_data$Sex == \"Males\"] <- -pyramid_data$Pop[pyramid_data$Sex == \"Males\"]\n\nggplot(data = pyramid_data, aes(x = AG, y = Pop, fill = Sex)) +\n  geom_bar(stat = \"identity\") +\n  coord_flip() +\n  labs(title = \"Population Pyramid (2024)\", x = \"Age Group\", y = \"Population\") +\n  scale_y_continuous(labels = comma) +\n  scale_fill_manual(values = c(\"skyblue\", \"salmon\")) + \n  theme_minimal() +\n  theme(axis.text.y = element_text(size = 10))\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01b_files/figure-html/unnamed-chunk-12-1.png){width=1152}\n:::\n:::\n\n\n\nThe chart is an age pyramid which illustrated the age structure of Singapore's population well and it is in sync with my classmate's data storytelling insights.\n\nHowever, the age pyramid can be classified under Quadrant IV = \\[confusing, beautiful\\]. This is because males are coded as red and females are coded as blue. There is also a negative number in the x-axis for population.\n\nTo improve the chart, it is recommended to:\n\n-   Swop the colour code for gender\n\n-   Update the scale to be positive number\n\n-   Compress the chart. \n\n### **2.3.2 Makeover of Original Chart**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = pyramid_data, aes(x = AG, y = Pop, fill = Sex)) +\n  geom_bar(stat = \"identity\", width = 0.9) +\n  coord_flip() +\n  labs(title = \"Population Pyramid (2024)\", x = \"Age Group\", y = \"Population\") +\n  scale_y_continuous(labels = function(x) comma(abs(x))) +\n  scale_fill_manual(values = c(\"skyblue\", \"salmon\")) +\n  theme_minimal() +\n  theme(\n    axis.text.y = element_text(size = 9),\n    axis.text.x = element_text(size = 9),\n    plot.title = element_text(size = 14, face = \"bold\"),\n    plot.margin = margin(10, 10, 10, 10)\n  )\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01b_files/figure-html/unnamed-chunk-13-1.png){width=768}\n:::\n:::\n\n\n\n## **2.4 Box Plot based on Age Range**\n\n### **2.4.1 Original Chart**\n\nThe attempt to reproduce the original chart using the code below has failed too as there was no FA column created.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nFA_order <- c(\"<= 60\", \">60 to 80\", \">80 to 100\", \">100 to 120\", \">120\", \"Not Available\")\nResident_Data$FA <- factor(Resident_Data$FA, levels = FA_order)\n\nggplot(Resident_Data, aes(x = FA, y = Pop)) +\n  geom_boxplot(fill = \"lightgreen\") +\n  labs(title = \"Population by Functional Age Range (FA)\", x = \"FA Band\", y = \"Population\") +\n  theme_minimal()\n```\n:::\n\n\n\nTo rectify, it is assumed that FA refers to Functional Age binned based on Age \\<= 60, \\>60 to 80, \\>80 to 100, \\>100 to 120, \\>120, Not Available.\n\nThe following codes for FA column were inserted\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nResident_Data <- Resident_Data %>%\n  mutate(\n    FA = case_when(\n      Age <= 60 ~ \"<= 60\",\n      Age > 60 & Age <= 80 ~ \">60 to 80\",\n      Age > 80 & Age <= 100 ~ \">80 to 100\",\n      Age > 100 & Age <= 120 ~ \">100 to 120\",\n      Age > 120 ~ \">120\",\n      TRUE ~ \"Not Available\"\n    )\n  )\n```\n:::\n\n\n\nI have attempted to reproduce the original chart using the codes provided but was unable to do so as it is not possible to distinguish population aged \"\\>100 to 120\", \"\\>120\" and \"Not Available\" since all population aged 90 and above will be classified under \"\\>80 to 100\".\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nFA_order <- c(\"<= 60\", \">60 to 80\", \">80 to 100\", \">100 to 120\", \">120\", \"Not Available\")\nResident_Data$FA <- factor(Resident_Data$FA, levels = FA_order)\n\nggplot(Resident_Data, aes(x = FA, y = Pop)) +\n  geom_boxplot(fill = \"lightgreen\") +\n  labs(title = \"Population by Functional Age Range (FA)\", x = \"FA Band\", y = \"Population\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01b_files/figure-html/unnamed-chunk-16-1.png){width=1152}\n:::\n:::\n\n\n\nThe chart is a box plot based on age range. Box plots are used to show distributions of numeric continuous data values along y-axis, and compare them between multiple groups. As mentioned earlier, the data grouping seems to be erroneous. Given that the population numbers are by subzones, the box plot shows large number of outliers which is not useful for storytelling.\n\nHence, the chart can be classified under Quadrant III = \\[confusing, ugly\\].\n\n### **2.4.2 Makeover of Original Chart**\n\nIf the intent is to show the total population number in the 3 age groups as per the writeup, it is recommended to use a bar graph instead as shown below. The total population numbers in each age group are added together first, followed by the plotting.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nResident_FA_summary <- Resident_Data %>%\n  group_by(FA) %>%\n  summarise(TotalPop = sum(Pop, na.rm = TRUE))\n\nggplot(Resident_FA_summary, aes(x = FA, y = TotalPop)) +\n  geom_col(fill = \"lightgreen\") +\n  labs(title = \"Total Population by FA Band\", x = \"FA Band\", y = \"Total Population\") +\n  scale_y_continuous(labels = comma) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01b_files/figure-html/unnamed-chunk-17-1.png){width=768}\n:::\n:::\n\n\n\n# **3 References**\n\n**Jones, B.** (2012, May 28). *Data visualization: Clarity or aesthetics?* <https://dataremixed.com/2012/05/data-visualization-clarity-or-aesthetics/>\n",
    "supporting": [
      "Take-home_Ex01b_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}