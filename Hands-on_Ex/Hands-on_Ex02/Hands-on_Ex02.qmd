---
title: "Hands-on Exercise 2"
author: "Belinda Lim"
date: April 22, 2025 
date-modified: "last-modified"
format:
  html:
    theme: flatly
    toc: true
    code-fold: true
editor: source
---

# **2. Beyond ggplot2 Fundamentals**

## **2.1 Overview**

In this chapter, you will be introduced to several ggplot2 extensions for creating more elegant and effective statistical graphics. By the end of this exercise, you will be able to:

-   control the placement of annotation on a graph by using functions provided in ggrepel package,

-   create professional publication quality figure by using functions provided in ggthemes and hrbrthemes packages,

-   plot composite figure by combining ggplot2 graphs by using patchwork package.

## **2.2 Getting started**

### **2.2.1 Installing and loading the required libraries**

In this exercise, beside tidyverse, four R packages will be used. They are:

-   ggrepel: an R package provides geoms for ggplot2 to repel overlapping text labels.

-   ggthemes: an R package provides some extra themes, geoms, and scales for ‘ggplot2’.

-   hrbrthemes: an R package provides typography-centric themes and theme components for ggplot2.

-   patchwork: an R package for preparing composite figure created using ggplot2.

Code chunk below will be used to check if these packages have been installed and also will load them onto your working R environment.

```{r}
pacman::p_load(ggrepel, patchwork, 
               ggthemes, hrbrthemes,
               tidyverse)
```

### 2.2.2 Importing data

For the purpose of this exercise, a data file called Exam_data will be used. It consists of year end examination grades of a cohort of primary 3 students from a local school. It is in csv file format.

The code chunk below imports exam_data.csv into R environment by using read_csv() function of readr package. readr is one of the tidyverse package.

```{r}
exam_data <- read_csv("data/Exam_data.csv")
```

## 2.3 Beyond ggplot2 Annotation: ggrepel

One of the challenges in plotting statistical graphs is annotation, especially when there are many data points.

::: {.panel-tabset}

### The plot

```{r, echo=FALSE, message=FALSE}
ggplot(data = exam_data,
       aes(x = MATHS, y = ENGLISH)) +
  geom_point() +
  geom_smooth(method = lm, linewidth = 0.5) +
  geom_label(aes(label = ID),
             hjust = 0.5,
             vjust = -0.5) +
  coord_cartesian(xlim = c(0, 100),
                  ylim = c(0, 100)) +
  ggtitle("English scores versus Maths scores for Primary 3")
```

### The code
```{r, eval=FALSE}
ggplot(data = exam_data, aes(x = MATHS, y = ENGLISH)) +
  geom_point() +
  geom_smooth(method = lm, linewidth = 0.5) +
  geom_label(aes(label = ID), hjust = 0.5, vjust = -0.5) +
  coord_cartesian(xlim = c(0, 100), ylim = c(0, 100)) +
  ggtitle("English scores versus Maths scores for Primary 3")
```
:::

ggrepel is an extension of ggplot2 package which provides geoms for ggplot2 to repel overlapping text as in our examples on the right.

We simply replace geom_text() by geom_text_repel() and geom_label() by geom_label_repel.
